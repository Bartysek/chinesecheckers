<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>0</y>
      <w>246</w>
      <h>486</h>
    </coordinates>
    <panel_attributes>org.example::Server
--
-SERVER_INSTANCE = new Server(): Server
-serverSocket: ServerSocket
-waitingPlayers = new ArrayList(): ArrayList&lt;Player&gt;
-game: Game
-collectConnections = new Thread(new Runnable() {&#13;
&#13;
    @Override&#13;
    public void run() {&#13;
        while (true) {&#13;
            try {&#13;
                Socket newConn = serverSocket.accept();&#13;
                synchronized (waitingPlayers) {&#13;
                    waitingPlayers.add(new Player(newConn));&#13;
                }&#13;
                System.out.println("New connection");&#13;
            } catch (IOException e) {&#13;
                System.err.println("IO exception");&#13;
            }&#13;
        }&#13;
    }&#13;
}): Thread
-addToGame = new Thread(new Runnable() {&#13;
&#13;
    @Override&#13;
    public void run() {&#13;
        while (true) {&#13;
            try {&#13;
                //busyloop, ale bez niego nie wysyła się wiadomość&#13;
                Thread.sleep(100);&#13;
            } catch (InterruptedException e) {&#13;
                throw new RuntimeException(e);&#13;
            }&#13;
            if (!game.isFull() &amp;&amp; !waitingPlayers.isEmpty()) {&#13;
                PlayerInterface p;&#13;
                synchronized (waitingPlayers) {&#13;
                    p = waitingPlayers.removeFirst();&#13;
                }&#13;
                System.out.println("Added player to game");&#13;
                game.addPlayer(p);&#13;
            }&#13;
        }&#13;
    }&#13;
}): Thread
--
-Server(): ctor
+getInstance(): Server
+main(String[] args): void
+start(final int port): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>378</x>
      <y>678</y>
      <w>252</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>org.example::CaptureRules
--
#capturedPieces: int[]
--
+setBoard(Board newBoard, int numPlayers): void
+handleMove(int y1, int x1, int y2, int x2, int playerNumber): int
-checkMove(int y1, int x1, int y2, int x2): int
-isPiece(int x, int y): boolean
-isEmptySpace(int x, int y): boolean
+checkEndCon(int player): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>666</x>
      <y>684</y>
      <w>252</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>org.example::NaturalRules
--
#pieceOwnership = new int[6]: int[]
--
+setBoard(Board newBoard, int numPlayers): void
+handleMove(int y1, int x1, int y2, int x2, int playerNumber): int
-checkMove(int y1, int x1, int y2, int x2, int playerNumber): int
+checkEndCon(int PlayerNumber): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>48</y>
      <w>180</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
org.example::PlayerInterface
--
--
~closeSocket(): void
~sendBoardState(int size, int[][] state): void
~removePiece(int[] pieceInfo): void
~addPiece(int[] pieceInfo): void
~sendMessage(String content): void
~listen(): byte[]
~queryNumPlayers(): int
~queryGameRules(): RulesInterface
~sendTheirTurn(): void
~sendEndOfMove(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>294</y>
      <w>198</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>org.example::Game
--
-players = new ArrayList(): List&lt;PlayerInterface&gt;
-noPlayers: int
-playing: int
-inProgress: boolean
-gameRules: RulesInterface
-board = new Board(): Board
--
~Game(): ctor
-initializeGame(): void
+addPlayer(final PlayerInterface player): void
+isFull(): boolean
-startGameLoop(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>936</x>
      <y>516</y>
      <w>132</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>org.example::Board
--
-state: int[][]
-hexagonSide: int
--
+Board(): ctor
-initBoard(int n): void
+getHexagonSide(): int
+getState(): int[][]
+setState(int[][] state): void
+remove(int x, int y): void
+add(int x, int y, int piece): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>468</y>
      <w>252</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
org.example::AbstractRules
--
#board: Board
#isFirstMoveInTurn = true: boolean
#currentPiece = new int[2]: int[]
#winner: int
#removedPieces = new ArrayList(): ArrayList&lt;Integer&gt;
#addedPieces = new ArrayList(): ArrayList&lt;Integer&gt;
--
+getNextRemovedPiece(): int[]
+getNextAddedPiece(): int[]
~setBoard(Board newBoard, int numPlayers): void
~handleMove(int y1, int x1, int y2, int x2, int playerNumber): int
~checkEndCon(int player): boolean
+getWinner(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>966</x>
      <y>774</y>
      <w>204</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>org.example::OoocRules
--
--
-scrambleBoard(Board b): void
+setBoard(Board newBoard, int numPlayers): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>918</x>
      <y>54</y>
      <w>168</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>org.example::Player
--
-socket: Socket
-out: OutputStream
-in: InputStream
--
+Player(final Socket connection): ctor
+closeSocket(): void
+sendBoardState(): void
+removePiece(int[] pieceInfo): void
+addPiece(int[] pieceInfo): void
+sendMessage(final String content): void
+listen(): byte[]
+queryNumPlayers(): int
+queryGameRules(): RulesInterface
+sendTheirTurn(): void
+sendEndOfMove(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>354</y>
      <w>132</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>708</x>
      <y>426</y>
      <w>18</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>180</y>
      <w>18</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>540</y>
      <w>78</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>804</x>
      <y>96</y>
      <w>126</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>912</x>
      <y>756</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>612</y>
      <w>18</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>606</x>
      <y>612</y>
      <w>72</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;110.0</additional_attributes>
  </element>
</diagram>
